<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function loginCtrl($scope, $http, $window, $location, glideUserSession, glideSystemProperties, spUtil) {

	var c = this;
	c.remember_me = c.data.forgetMeDefault;

	if (!c.data.is_logged_in && c.data.multisso_enabled && c.data.default_idp) {
		c.server.get({
			action: "set_sso_destination",
			pageURI: c.data.pageURI
		}).then(function() {
			$window.location = "/login_with_sso.do?glide_sso_id=" + c.data.default_idp;
		});
	}

	c.login = function(username, password) {
		var url = spUtil.getURL({sysparm_type: 'view_form.login'});
		
		// If the page isn't public, then the ID in the
		// URL won't match the rendered page ID
		var pageId = $location.search().id || $scope.page.id;
		var isLoginPage = $scope.portal.login_page_dv == pageId;

		return $http({
			method: 'post',
			url: url,
			data: $.param({
				'sysparm_type': 'login',
				'ni.nolog.user_password': true,
				'remember_me': !!c.remember_me ? true : false,
				'user_name': username,
				'user_password': password,
				'get_redirect_url': true,
				'sysparm_goto_url': isLoginPage ? null : $location.url(),
				'mfa_redirect_url': c.data.pageURI
			}),
			headers: {
				'Content-Type': 'application/x-www-form-urlencoded'
			}
		}).then(function(response) {
			if (!response.data) {
				c.message = $scope.data.errorMsg;
				return;
			}

			if (response.data.status == 'success') {
				if (c.data.multiFactorAuthEnabled) {
					c.server.get({
						action: "multi_factor_auth_setup",
						directTo: response.data.redirect_url
					}).then(handleLoginSuccess.bind(response));
				} else {
					handleLoginSuccess.call(response);
				}
			} else if (response.data.status == 'mfa_code_required') {
					$window.location = '/validate_multifactor_auth_code.do';
			} else {
				// wrong username or password
				c.message = response.data.message;
				c.password = "";
				c.username = "";
				angular.element("#username").focus();
			}

		}, function errorCallback(response) {
			c.message = $scope.data.errorMsg;
		});
	};

	c.externalLogin = function() {
		c.server.get({
			action: "set_sso_destination",
			pageURI: c.data.pageURI
		}).then(function() {
			glideSystemProperties.set("glide.authenticate.multisso.enabled", true);

			glideUserSession.getSsoRedirectUrlForUsername(c.username)
				.then(function(url) {
					$window.location = url;
				}, function(err) {
					spUtil.addErrorMessage($scope.data.errorMsg2);
				});
		});
	}

	function handleLoginSuccess() {
		c.success = this.data.message;
		$window.location = this.data.redirect_url;
	}

	c.setExternalLogin = function(newVal) {
		c.externalLoginMode = newVal;
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel{
  border : none !important ;
}

.reduis{
  border-radius: 12px;
  width : 50%;
  margin-left:25% ;
  margin-right :25%; 

}
h4 {
    display: block;
    margin-block-start: 1.33em;
    margin-block-end: 1.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
}
h4 {
    font-size: 3rem !important;
    line-height: 110%;
    margin: 1.52rem 0 .912rem 0;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>login_expense_management</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Login Expense Management</name>
        <option_schema>[{"name":"show_panel","section":"Presentation","default_value":"true","label":"Show Panel","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	options.show_panel = options.show_panel == "true" || options.show_panel == true;
	
	if (input && input.action === "multi_factor_auth_setup") {
		if (gs.getSession().getProperty("setup_multifactor_authn")) {
			gs.getSession().putProperty("nav_to", input.directTo);
			gs.getSession().putProperty("starting_page", input.directTo);
			gs.getSession().putProperty("is_direct_redirect", "true");
		}
		return;
	}
	
	// We don't want to set a starting page until we've begun the login process.
	if (input && input.action === "set_sso_destination") {
		var gs_nav_to = gs.getSession().getProperty("nav_to");
		gs.getSession().putProperty("nav_to", null);
		if (!gs.getSession().getProperty("starting_page"))
			gs.getSession().putProperty("starting_page", gs_nav_to);

		return;
	}

	data.errorMsg = gs.getMessage("There was an error processing your request");
	data.errorMsg2 = gs.getMessage("An error has occurred - please contact your system administrator");
	data.passwordMsg = gs.getMessage("Password");
	data.usernameMsg = gs.getMessage("User name");
	data.forgetMe = GlideProperties.getBoolean("glide.ui.forgetme");
	data.forgetMeDefault = GlideProperties.getBoolean('glide.ui.remember.me.default', true);
	data.is_logged_in = gs.getSession().isLoggedIn();
	var bypass_sso = options.bypass_sso == "true";
	data.multisso_enabled = !bypass_sso && GlideProperties.getBoolean("glide.authenticate.multisso.enabled");			
	data.default_idp = GlideProperties.get("glide.authenticate.sso.redirect.idp");
	data.pageURI = new GlideSPUtil().getPageUri();
	data.multiFactorAuthEnabled = GlideProperties.getBoolean('glide.authenticate.multifactor', false);
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-01-22 09:37:39</sys_created_on>
        <sys_id>a66fe970dba20010256528df4b96197f</sys_id>
        <sys_mod_count>51</sys_mod_count>
        <sys_name>Login Expense Management</sys_name>
        <sys_package display_value="Expense Management" source="x_315710_expense_m">ea3c9ce91b0cfb0072fe2136ec4bcb50</sys_package>
        <sys_policy/>
        <sys_scope display_value="Expense Management">ea3c9ce91b0cfb0072fe2136ec4bcb50</sys_scope>
        <sys_update_name>sp_widget_a66fe970dba20010256528df4b96197f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-01-23 08:04:34</sys_updated_on>
        <template><![CDATA[  <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">


  <div class="container">


    <!-- Outer Row -->
    <div class="row justify-content-center">

      <div class="col-xl-10 col-lg-12 col-md-9">

        <div class="card o-hidden border-0 shadow-lg my-5">
          <div class="card-body p-0">
            <!-- Nested Row within Card Body -->
            <div class="row">
              <div class="col-lg-6 d-none d-lg-block .bg-login-image " style="background-image: url('remboursement.jpg');background-repeat: no-repeat; background-attachment: fixed; background-size: 50% 80%;"></div>
              <div class="col-lg-6">
                <div class="p-5">
                  <div class="text-center">
                    <h4 class="mb-4">${Login} </h4>
                  </div>
                  
          <div ng-if="!data.is_logged_in">
            <form ng-if="!c.externalLoginMode" class="login-form" ng-submit="c.login(c.username, c.password)" method="post">
              <div ng-class="{'panel panel-default': c.options.show_panel}">

     
  
                <div ng-class="{'panel-body': c.options.show_panel}">
						
                    <div class="form-group">
                        <input class="form-control form-control-user"  id="username" name="username" autocapitalize="off" ng-keypress="c.message = ''" ng-click="c.message = ''" type="text" placeholder='{{::data.usernameMsg}}' autofocus="true" ng-model="c.username"/>
                      </div>
                   
                  <div class="form-group">
                        <input class="form-control form-control-user" id="password" name="password" ng-keypress="c.message = ''" ng-click="c.message = ''"  type="password" placeholder='{{::data.passwordMsg}}' ng-model="c.password"/>
                      </div>
                   

                    <div ng-if="c.message" class="alert alert-danger" role="alert">{{c.message}}</div>
                    <div ng-if="c.success" class="alert alert-success" role="alert">{{c.success}}</div>

                   <!-- <div ng-if="!c.data.forgetMe" class="checkbox">
                      <label>
                        <input name="c.remember_me" ng-model="c.remember_me" checked="checked" id="remember_me" type="checkbox" class="filled-in" value="true"/> ${Remember me}
                      </label>
                    </div>
										-->
                    <div ng-if="!c.data.forgetMe">
                       
                 
          <div class="form-group">
                      <div class="custom-control custom-checkbox small">
            <input type="checkbox" class="custom-control-input" name="c.remember_me" ng-model="c.remember_me" checked="checked" id="remember_me"   value="true"   />

          <label class="custom-control-label" for="customCheck">${Remember me}</label>
                      </div>
                    </div>
                    </div>
                  
                    <button name="login" type="submit" class="btn btn-primary btn-user btn-block reduis">
                      ${Login}
                    </button>

                    <a ng-if="data.multisso_enabled"
                       class="set-login-type-link"
                       href="javascript:void(0)"
                       ng-click="c.setExternalLogin(true)">${Use external login}</a>
                  </div>
                </div>
            </form>
            <form ng-if="c.externalLoginMode" class="form-signin" ng-submit="c.externalLogin()" method="post">
              <div ng-class="{'panel panel-default': c.options.show_panel}">
                <div ng-if="c.options.show_panel" class="panel-heading">
                  <h3 class="panel-title">${External Login}</h3>
                </div>

                <div ng-class="{'panel-body': c.options.show_panel}">
                  <div class="list-group list-group-sm">
                    <div class="list-group-item">
                      <label for="username" class="sr-only">${User ID}</label>
                      <input id="username" name="username" ng-click="message = ''" class="form-control no-border" type="text" placeholder='${User ID}' autofocus="true" ng-model="c.username"/>
                    </div>
                  </div>

                  <button name="login" type="submit" class="btn waves-effect waves-light border-round gradient-45deg-purple-deep-orange col s12">
                    ${Submit}
                  </button>

                  <a href="javascript:void(0)"
                     class="set-login-type-link"
                     ng-click="c.setExternalLogin(false)">${Use internal login}</a>
                </div>
              </div>
              
            </form>
          </div>
        </div></div>

                </div></div>
          
          
        </div></div></div>
  </div>
  
    
]]></template>
    </sp_widget>
</record_update>
