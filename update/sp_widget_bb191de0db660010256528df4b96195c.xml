<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,spModal,spUtil,$filter,$rootScope) {
	var c = this;
$scope.range = function (size,start, end) {
    var ret = [];  

       if (size < end) {
        end = size;
        if(size<$scope.gap){
             start = 0;
        }else{
             start = size-$scope.gap;
        }

    }
    for (var i = start; i < end; i++) {
        ret.push(i);
    }        
       
    return ret;
};


		c.ctrlRead =function(data ) 
	{

	$scope.sortingOrder = sortingOrder;
	$scope.reverse = false;
	$scope.filteredItems = [];
	$scope.groupedItems = [];
	$scope.itemsPerPage = 5;
	$scope.pagedItems = [];
	$scope.currentPage = 0;
	$scope.items =JSON.parse(c.data.tableData);
	var searchMatch = function (haystack, needle) {
		if (!needle) {
			return true;
		}
		return haystack.toLowerCase().indexOf(needle.toLowerCase()) !== -1;
	};

	// init the filtered items
	$scope.search = function () {
		$scope.filteredItems = $filter('filter')($scope.items, function (item) {
			for(var attr in item) {
				if (searchMatch(item[attr], $scope.query))
					return true;
			}
			return false;
		});
		// take care of the sorting order
		if ($scope.sortingOrder !== '') {
			$scope.filteredItems = $filter('orderBy')($scope.filteredItems, $scope.sortingOrder, $scope.reverse);
		}
		$scope.currentPage = 0;
		// now group by pages
		$scope.groupToPages();
	};

	// calculate page in place
	$scope.groupToPages = function () {
		$scope.pagedItems = [];

		for (var i = 0; i < $scope.filteredItems.length; i++) {
			if (i % $scope.itemsPerPage === 0) {
				$scope.pagedItems[Math.floor(i / $scope.itemsPerPage)] = [ $scope.filteredItems[i] ];
			} else {
				$scope.pagedItems[Math.floor(i / $scope.itemsPerPage)].push($scope.filteredItems[i]);
			}
		}
	};

	$scope.range = function (start, end) {
		var ret = [];
		if (!end) {
			end = start;
			start = 0;
		}
		for (var i = start; i < end; i++) {
			ret.push(i);
		}
		return ret;
	};

	$scope.prevPage = function () {
		if ($scope.currentPage > 0) {
			$scope.currentPage--;
		}
	};

	$scope.nextPage = function () {
		if ($scope.currentPage < $scope.pagedItems.length - 1) {
			$scope.currentPage++;
		}
	};

	$scope.setPage = function () {
		$scope.currentPage = this.n;
	};

	// functions have been describe process the data for display
	$scope.search();

	// change sorting order
	$scope.sort_by = function(newSortingOrder) {
		if ($scope.sortingOrder == newSortingOrder)
			$scope.reverse = !$scope.reverse;

		$scope.sortingOrder = newSortingOrder;

		// icon setup
		$('th i').each(function(){
			// icon reset
			$(this).removeClass().addClass('icon-sort');
		});
		if ($scope.reverse)
			$('th.'+$scope.sortingOrder+' i').removeClass().addClass('icon-chevron-up');
		else
			$('th.'+$scope.sortingOrder+' i').removeClass().addClass('icon-chevron-down');
	};
		}

	//c.getData();
	c.ctrlRead(c.data.tableData );

	
	
	
	c.selectItem = function(id,idx,action) {  
	

		if(action == 'delete'){
	
			c.confirmDelete(id);	
		}
		if(action == 'update'){
			$rootScope.mileage_expID = id;
		$rootScope.$emit('selectmileage_exp', id);
		
		}
	}
	
		c.add = function(){
		$rootScope.addmileage_exp = "ok";
		$rootScope.$emit('addmileage_exp', "ok");
	}


	c.confirmDelete = function(idd){
		
		spModal.confirm("Are you sure you want to delete this Mileage expense record?").then(function(confirmed){
			if(confirmed){
				c.deletemileage_exp(idd);
			}
		});
	}
	c.deletemileage_exp = function(iddd) {
		
			c.data.action='deletemileage_exp';
			c.data.mileage_expID=iddd;
		c.server.update().then(function(r) {

			spUtil.addTrivialMessage("The record has been deleted.");
	
			c.ctrlRead(c.data.tableData );
			c.data.action = undefined;
		});
	}
	
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>


.green-text{
    color: green;
}
.red-text{
    color: #ff1a1a;
}
.right {
 // padding-top : 10px !important;
    float: right !important;
  padding: 15px !important;
}
table, th, td {
    border: none;
}
.pagination li.disabled a {
    cursor: default;
    color: #999;
}
/*a {
    text-decoration: none;
}
a {
    text-decoration: none;
    color: #3949ab;
    -webkit-tap-highlight-color: transparent;
}*/
.pull-right {
    float: right !important;
}
.pagination li {
    display: inline-block;
    height: 30px;
    text-align: center;
    vertical-align: top;
    border-radius: 2px;
}
.pagination li a {
    font-size: 2rem;
    line-height: 30px;
    display: inline-block;
    padding: 0 10px;
    color: #444;
}
th {
    text-align: left;
}
td, th {
    padding: 0;
}
table {
    display: table;
    width: 100%;
    border-spacing: 0;
    border-collapse: collapse;
}
td, th {
    display: table-cell;
    padding: 15px 5px;
    text-align: left;
    vertical-align: middle;
    border-radius: 2px;
  font-size :1.5rem;
}
.container-fluid {
    width: 100%;
    padding-right: 0.75rem;
    padding-left: 0.75rem;
   margin-right: 15px;
    margin-left: 15px !important;
  padding-top :25px !important;
}
h4 {
    display: block;
    margin-block-start: 1.33em;
    margin-block-end: 1.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
}
h4 {
    font-size: 3rem !important;
    line-height: 110%;
    /*margin: 1.52rem 0 .912rem 0;*/
}


.btn-floating i {
    font-size: 1.6rem;
    line-height: 40px;
    display: inline-block;
    width: inherit;
    text-align: center;
    color: #fff;
}
.input-field .prefix {
    font-size: 2.2rem;
    position: absolute;
    top: .5rem;
    width: 3rem;
    -webkit-transition: color .2s;
    -moz-transition: color .2s;
    -o-transition: color .2s;
    transition: color .2s;
}
.btn i, .btn-large i, .btn-small i, .btn-floating i, .btn-large i, .btn-small i, .btn-flat i {
    font-size: 1.3rem;
    line-height: inherit;
}

.input-field .prefix ~ input, .input-field .prefix ~ textarea, .input-field .prefix ~ label, .input-field .prefix ~ .validate ~ label, .input-field .prefix ~ .helper-text, .input-field .prefix ~ .autocomplete-content {
    width: 92%;
    width: -webkit-calc(100% - 3rem);
    width: -moz-calc(100% - 3rem);
    width: calc(100% - 3rem);
    margin-left: 3rem;
}

button, input, optgroup, select, textarea {
    font-family: 'Muli', sans-serif;
}
button, input {
    overflow: visible;
}
button, input, optgroup, select, textarea {
    font-family: sans-serif;
    font-size: 100%;
    line-height: 1.15;
    margin: 0;
}
input, button, select, textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
}
input {
    line-height: normal;
}
*, *:before, *:after {
    -webkit-box-sizing: inherit;
    -moz-box-sizing: inherit;
    box-sizing: inherit;
}
input:not([type]), input[type=text]:not(.browser-default), input[type=password]:not(.browser-default), input[type=email]:not(.browser-default), input[type=url]:not(.browser-default), input[type=time]:not(.browser-default), input[type=date]:not(.browser-default), input[type=datetime]:not(.browser-default), input[type=datetime-local]:not(.browser-default), input[type=tel]:not(.browser-default), input[type=number]:not(.browser-default), input[type=search]:not(.browser-default), textarea.materialize-textarea {
    font-size: 1.5rem;
    -webkit-box-sizing: content-box;
    -moz-box-sizing: content-box;
    box-sizing: content-box;
    width: 100%;
    height: 3rem;
    /*margin: 0 0 8px 0;
    padding: 0;*/
    -webkit-transition: border .3s, -webkit-box-shadow .3s;
    -moz-transition: box-shadow .3s, border .3s;
    -o-transition: box-shadow .3s, border .3s;
    transition: border .3s, -webkit-box-shadow .3s;
    transition: box-shadow .3s, border .3s;
    transition: box-shadow .3s, border .3s, -webkit-box-shadow .3s;
    border: none;
    border-bottom: 1px solid #9e9e9e;
    border-radius: 0;
    outline: none;
    background-color: transparent;
    -webkit-box-shadow: none;
    box-shadow: none;
}











/*
div.scrollmenu {
 
  overflow: auto;
  white-space: nowrap;
}
*/

.pager-nav {
    margin: 16px 0;
}
.pager-nav span {
    display: inline-block;
    padding: 4px 8px;
    margin: 1px;
    cursor: pointer;
    font-size: 14px;
    background-color: #FFFFFF;
    border: 1px solid #e1e1e1;
    box-shadow: 0 1px 1px rgba(0,0,0,.04);
}
.pager-nav span:hover,
.pager-nav .pg-selected {
    background-color: #f9f9f9;
    border: 1px solid #CCCCCC;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>widget_list_of_mileage_expenses2</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>widget_list_of_mileage_expenses2</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var gr=new GlideRecord("x_315710_expense_m_mileage_expense");

	var listmileage_exps= function(){            
		var gr=new GlideRecordSecure("x_315710_expense_m_mileage_expense");
		
		var i=0;
		var json=new global.JSON();
		data.mileage_exps=[];

		gr.orderByDesc('sys_created_on');
		gr.query();
		while (gr.next()) {
			var mileage_expObj = {};
			$sp.getRecordDisplayValues(mileage_expObj,gr,'title,description,departure,arrival,km,trips,rate,vehicle,period,user,sys_id');	

			data.mileage_exps.push(mileage_expObj);

		}

		gs.warn("length : "+i);
		data.tableData = null ; 
		data.tableData = json.encode(data.mileage_exps);
	}

	//if(!input){
		listmileage_exps();
//	}

	if (input && input.action == 'deletemileage_exp') {
		var grr=new GlideRecord("x_315710_expense_m_mileage_expense");
		grr.get(input.mileage_expID);
		gs.warn("sheet deleted : "+input.mileage_expID);

		gs.warn('delete');
		grr.deleteRecord(); 
		listmileage_exps();


	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-01-21 13:21:47</sys_created_on>
        <sys_id>bb191de0db660010256528df4b96195c</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>widget_list_of_mileage_expenses2</sys_name>
        <sys_package display_value="Expense Management" source="x_315710_expense_m">ea3c9ce91b0cfb0072fe2136ec4bcb50</sys_package>
        <sys_policy/>
        <sys_scope display_value="Expense Management">ea3c9ce91b0cfb0072fe2136ec4bcb50</sys_scope>
        <sys_update_name>sp_widget_bb191de0db660010256528df4b96195c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-02-03 11:09:41</sys_updated_on>
        <template><![CDATA[  <link href="https://netdna.bootstrapcdn.com/font-awesome/2.0/css/font-awesome.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
   

  <!-- Begin Page Content -->
        <div class="container-fluid">
          <p class="right">

     <a class="btn btn-primary btn-circle btn-lg" href="?id=form_mileage_expense2&sys_id=-1">
       <i class="fas fa-plus"></i>
      </a>
  
</p>
  <h4 >List Of Mileage expenses</h4>
 
    <div  ng-controller="ctrlRead">
       <div class="input-field col m12">
         <i class="icon-search prefix"></i>
        <input type="text" ng-model="query" ng-change="search()" class="input-large search-query" placeholder="Search">
      
      </div>

      <script type="text/javascript">
        var sortingOrder = 'title';
      </script>
        <table id="data-table-simple" class="display">
          <thead>
            <tr>
              <th class="text-center" >Title&nbsp;<a ng-click="sort_by('title')"><i class="icon-sort"></i></a></th>
              <th class="text-center" >Departure&nbsp;<a ng-click="sort_by('departure')"><i class="icon-sort"></i></a></th>
              <th class="text-center" >Arrival&nbsp;<a ng-click="sort_by('arrival')"><i class="icon-sort"></i></a></th>
              <th class="text-center" >KM&nbsp;<a ng-click="sort_by('km')"><i class="icon-sort"></i></a></th>
              <th class="text-center" >Trip(s)&nbsp;<a ng-click="sort_by('trips')"><i class="icon-sort"></i></a></th>
              <th class="text-center" >Vehicle&nbsp;<a ng-click="sort_by('vehicle')"><i class="icon-sort"></i></a></th>
                 <th class="text-center" >Period&nbsp;<a ng-click="sort_by('period')"><i class="icon-sort"></i></a></th>
                 <th class="text-center" >Rate&nbsp;<a ng-click="sort_by('rate')"><i class="icon-sort"></i></a></th>
                 <th class="text-center" >User&nbsp;<a ng-click="sort_by('user')"><i class="icon-sort"></i></a></th>
              <th class="text-center" colspan="2"> Options </th>
            </tr>
          </thead>
          <tbody>
           <tr  ng-repeat="item in pagedItems[currentPage]  | orderBy:sortingOrder:reverse ">
              <td class="text-center" >{{item.title}}</td>
              <td class="text-center" >{{item.departure}}</td>
              <td class="text-center" >{{item.arrival}}</td>
              <td class="text-center" >{{item.km}}</td>
              <td class="text-center" >{{item.trips}}</td>
              <td class="text-center" >{{item.vehicle}}</td>
              <td class="text-center" >{{item.period}}</td>
              <td class="text-center" >{{item.rate}}</td>
              <td class="text-center" >{{item.user}}</td>
              <td class="text-center"> <button class="btn btn-danger"  ng-click="c.selectItem(item.sys_id,$index,'delete')" >
                <span class="glyphicon glyphicon-trash"></span></button>
              </td>
              <td class="text-center">
                 <a  class="btn btn-success"  href="?id=form_mileage_expense2&table=x_315710_expense_m_mileage_expense&sys_id={{item.sys_id}}" >
                      <span class="glyphicon glyphicon glyphicon-pencil"></span></a>
            </td>
            </tr>
          </tbody>

        </table>
          <div class="pagination pull-right">
                            <ul>
                                <li ng-class="{disabled: currentPage == 0}">
                                    <a href ng-click="prevPage()">« Prev</a>
                                </li>
                                <li ng-repeat="n in range(pagedItems.length)"
                                    ng-class="{active: n == currentPage}"
                                ng-click="setPage()">
                                    <a href ng-bind="n + 1">1</a>
                                </li>
                                <li ng-class="{disabled: currentPage == pagedItems.length - 1}">
                                    <a href ng-click="nextPage()">Next »</a>
                                </li>
                            </ul>
                        </div>
                   
     </div>
        
    
</div>
  

  







]]></template>
    </sp_widget>
</record_update>
