<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[
function($scope,spModal,spUtil,$filter,$rootScope) {
	var c = this;


	c.ctrlRead =function(data ) 
	{

		$scope.sortingOrder = sortingOrder;
		$scope.reverse = false;
		$scope.filteredItems = [];
		$scope.groupedItems = [];
		$scope.itemsPerPage = 5;
		$scope.pagedItems = [];
		$scope.currentPage = 0;
		$scope.items =JSON.parse(data);
		var searchMatch = function (haystack, needle) {
			if (!needle) {
				return true;
			}
			return haystack.toLowerCase().indexOf(needle.toLowerCase()) !== -1;
		};

		// init the filtered items
		$scope.search = function () {
			$scope.filteredItems = $filter('filter')($scope.items, function (item) {
				for(var attr in item) {
					if (searchMatch(item[attr], $scope.query))
						return true;
				}
				return false;
			});
			// take care of the sorting order
			if ($scope.sortingOrder !== '') {
				$scope.filteredItems = $filter('orderBy')($scope.filteredItems, $scope.sortingOrder, $scope.reverse);
			}
			$scope.currentPage = 0;
			// now group by pages
			$scope.groupToPages();
		};

		// calculate page in place
		$scope.groupToPages = function () {
			$scope.pagedItems = [];

			for (var i = 0; i < $scope.filteredItems.length; i++) {
				if (i % $scope.itemsPerPage === 0) {
					$scope.pagedItems[Math.floor(i / $scope.itemsPerPage)] = [ $scope.filteredItems[i] ];
				} else {
					$scope.pagedItems[Math.floor(i / $scope.itemsPerPage)].push($scope.filteredItems[i]);
				}
			}
		};

		$scope.range = function (start, end) {
			var ret = [];
			if (!end) {
				end = start;
				start = 0;
			}
			for (var i = start; i < end; i++) {
				ret.push(i);
			}
			return ret;
		};

		$scope.prevPage = function () {
			if ($scope.currentPage > 0) {
				$scope.currentPage--;
			}
		};

		$scope.nextPage = function () {
			if ($scope.currentPage < $scope.pagedItems.length - 1) {
				$scope.currentPage++;
			}
		};

		$scope.setPage = function () {
			$scope.currentPage = this.n;
		};

		// functions have been describe process the data for display
		$scope.search();

		// change sorting order
		$scope.sort_by = function(newSortingOrder) {
			if ($scope.sortingOrder == newSortingOrder)
				$scope.reverse = !$scope.reverse;

			$scope.sortingOrder = newSortingOrder;

			// icon setup
			$('th i').each(function(){
				// icon reset
				$(this).removeClass().addClass('icon-sort');
			});
			if ($scope.reverse)
				$('th.'+$scope.sortingOrder+' i').removeClass().addClass('icon-chevron-up');
			else
				$('th.'+$scope.sortingOrder+' i').removeClass().addClass('icon-chevron-down');
		};
	}
	$scope.range = function (size,start, end) {
		var ret = [];  

		if (size < end) {
			end = size;
			if(size<$scope.gap){
				start = 0;
			}else{
				start = size-$scope.gap;
			}

		}
		for (var i = start; i < end; i++) {
			ret.push(i);
		}          
		return ret;
	};

	c.ctrlRead(c.data.tableData );





	c.selectItem = function(id,idx,action) {  

		c.billPos = idx;

		if(action == 'delete'){

			c.confirmDelete(id);	
		}
		if(action == 'update'){
			$rootScope.catID = id;
			$rootScope.$emit('selectcat', id);

		}
	}
	c.add = function(){
		$rootScope.addcat = "ok";
		$rootScope.$emit('addcat', "ok");
	} 
	c.confirmDelete = function(idd){

		spModal.confirm("Are you sure you want to delete this Categorie record?").then(function(confirmed){
			if(confirmed){
				c.deletecat(idd);
			}
		});
	}
	c.deletecat = function(iddd) {

		c.data.action = 'deleteCat';
		c.data.catID=iddd ; 

		c.server.update().then(function(r) {

			spUtil.addTrivialMessage("The record has been deleted.");

			c.ctrlRead(c.data.tableData );
			c.data.action = undefined;
		});

	}


}]]></client_script>
        <controller_as>c</controller_as>
        <css>.container{  
    white-space:nowrap;
    overflow-x:auto;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>widget_list_of_categorie</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>widget list of categorie</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {


	var listCategories = function(){            
		var gr=new GlideRecord("x_315710_expense_m_category");

		var i=0;
		var json=new global.JSON();
		data.categories=[];
		gr.orderByDesc('sys_created_on');
		gr.query();
		while (gr.next()) {
			var catObj = {};
			$sp.getRecordDisplayValues(catObj,gr,'name,description,sys_id,sys_created_on,sys_updated_on');	
			data.categories.push(catObj);
		}
		gs.warn("length : "+i);
		data.tableData = null ; 
		data.tableData = json.encode(data.categories);
	}
	
	//if(!input){
		listCategories();
//	}
	if (input && input.action == 'deleteCat') {
		var grr=new GlideRecord("x_315710_expense_m_category");
		grr.get(input.catID) ; 

			gs.warn("cat deleted : "+input.catID);

			gs.warn('delete');
			grr.deleteRecord(); 
			listCategories();

		
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-01 15:24:52</sys_created_on>
        <sys_id>b9f0d3721b1e330072fe2136ec4bcb42</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>widget list of categorie</sys_name>
        <sys_package display_value="Expense Management" source="x_315710_expense_m">ea3c9ce91b0cfb0072fe2136ec4bcb50</sys_package>
        <sys_policy/>
        <sys_scope display_value="Expense Management">ea3c9ce91b0cfb0072fe2136ec4bcb50</sys_scope>
        <sys_update_name>sp_widget_b9f0d3721b1e330072fe2136ec4bcb42</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-11 14:43:38</sys_updated_on>
        <template><![CDATA[<link href="https://netdna.bootstrapcdn.com/font-awesome/2.0/css/font-awesome.css" rel="stylesheet">

   <p>
      <a class="right btn-floating btn-large primary-text gradient-shadow cyan pull-right"  href="?id=formcat&sys_id=-1">
        <i class="material-icons">add</i>
      </a>
    </p>
  <h4 class="card-title">List Of Categories</h4>
 
    <div ng-controller="ctrlRead">
      
      
       <div class="input-field col m12">
         <i class="icon-search prefix"></i>
        <input type="text" ng-model="query" ng-change="search()" class="input-large search-query" placeholder="Search">
      
      </div>

      <script type="text/javascript">
        var sortingOrder = 'name';
      </script>
      <table id="data-table-simple" class="display">
        <thead>
          <tr>
            <th class="text-center" >Name&nbsp;<a ng-click="sort_by('name')"><i class="icon-sort"></i></a></th>
            <th class="text-center" >Description&nbsp;<a ng-click="sort_by('description')"><i class="icon-sort"></i></a></th>
            <th class="text-center" >Created&nbsp;<a ng-click="sort_by('sys_created_on')"><i class="icon-sort"></i></a></th>
            <th class="text-center" >Updated&nbsp;<a ng-click="sort_by('sys_updated_on')"><i class="icon-sort"></i></a></th>

            <th class="text-center" colspan="2"> Options </th>

        </thead>
        <tbody>
          <tr  ng-repeat="item in pagedItems[currentPage]  | orderBy:sortingOrder:reverse   ">
            <td class="text-center" >{{item.name}}</td>
            <td class="text-center" >{{item.description}}</td>
            <td class="text-center">{{item.sys_created_on}}</td>
            <td class="text-center">{{item.sys_updated_on}}</td>
            <td> <button class="mb-6 btn waves-effect waves-light red accent-2"  ng-click="c.selectItem(item.sys_id,$index,'delete')" >
              <span class="glyphicon glyphicon-trash"></span></button>
            </td>
            <td>
              <a  class="mb-6 btn waves-effect waves-light purple lightrn-1"  href="?id=form_update_categorie&table=x_315710_expense_m_category&sys_id={{item.sys_id}}" >
                      <span class="glyphicon glyphicon glyphicon-pencil"></span></a>
                   </td>
          </tr>
        </tbody>
              
      </table>
    <div class="pagination pull-right">
                            <ul>
                                <li ng-class="{disabled: currentPage == 0}">
                                    <a href ng-click="prevPage()">« Prev</a>
                                </li>
                                <li ng-repeat="n in range(pagedItems.length)"
                                    ng-class="{active: n == currentPage}"
                                ng-click="setPage()">
                                    <a href ng-bind="n + 1">1</a>
                                </li>
                                <li ng-class="{disabled: currentPage == pagedItems.length - 1}">
                                    <a href ng-click="nextPage()">Next »</a>
                                </li>
                            </ul>
                        </div>
                   
          </div>
       

   
 

   


]]></template>
    </sp_widget>
</record_update>
